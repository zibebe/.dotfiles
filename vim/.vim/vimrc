" load sensible defaults first
runtime! plugin/sensible.vim
" load fzf 
set rtp+=/opt/homebrew/opt/fzf
" load the opt lsp plugin
packadd lsp

let mapleader = " "
" to generate all helptags use this
" packloadall | silent! helptags ALL

" show relative line numbers
set relativenumber
" but show the absolute line number for the current line
set number
" case-insensitive search/replace
set ignorecase
" unsless uppercase in search term
set smartcase
" show a column at 80 chars as a guide for long lines
set colorcolumn=80
" enable mouse usage in all modes
set mouse=a

set termguicolors
colorscheme nord

let g:lightline = {
	\ 'colorscheme': 'nord',
	\ }

let g:EasyMotion_do_mapping = 0

" goto mode
nnoremap gD :LspGotoDeclaration<CR>
nnoremap gd :LspGotoDefinition<CR>
nnoremap gy :LspGotoTypeDef<CR>
nnoremap gr :LspPeekReferences<CR>
nnoremap gi :LspGotoImpl<CR>
nnoremap gw <Plug>(easymotion-bd-w)

" space mode
nnoremap <leader>f :Files<CR>
nnoremap <leader>b :Buffers<CR>
nnoremap <leader>g :GFiles?<CR>
nnoremap <leader>G :Git<CR>
nnoremap <leader>k :LspHover<CR>
nnoremap <leader>d :LspDiag show<CR>
nnoremap <leader>r :LspRename<CR>
nnoremap <leader>s :Rg<CR>
nnoremap <leader>a :LspCodeAction<CR>
nnoremap <leader>, :set invlist<CR>
nmap <leader>c :Commentary<CR>
xmap <leader>c :Commentary<CR>
noremap <leader>p :put =system('pbpaste')<CR>
noremap <leader>P :put! =system('pbpaste')<CR>
xnoremap <leader>y :w !pbcopy<CR><CR>
xnoremap <leader>R :<C-U>call setreg('"', system('pbpaste'))<CR>:normal! gvP<CR>

" unimpaired alike
nnoremap [d :LspDiag nextWrap<CR>
nnoremap ]d :LspDiag prevWrap<CR>

" Clangd language server
call LspAddServer([#{
	\    name: 'clangd',
	\    filetype: ['c', 'cpp'],
	\    path: 'clangd',
	\    args: ['--background-index']
	\  }])

" Go language server
call LspAddServer([#{
	\    name: 'golang',
	\    filetype: ['go', 'gomod'],
	\    path: 'gopls',
	\    args: ['serve'],
	\    syncInit: v:true
	\  }])

" Rust language server
call LspAddServer([#{
	\    name: 'rustlang',
	\    filetype: ['rust'],
	\    path: 'rust-analyzer',
	\    args: [],
	\    syncInit: v:true
	\  }]) 

" custom comments
autocmd FileType c,cpp setlocal commentstring=//\ %s
"
" format on save
augroup AutoFormat
	autocmd!
	autocmd BufWritePre *.rs,*.c,*.h,*.cpp,*.hpp,*.go,*.gomod :LspFormat
augroup END
